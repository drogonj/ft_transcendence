services:
  front-end:
    container_name: front-end
    build: services/front-end
    ports:
      - "8080:443"
    restart: always
    depends_on:
      - user-management
    volumes:
      #- nginx:/singlepageapp
      - django:/tmp_static/
    networks:
      - network
    entrypoint: sh -c "sh /entrypoint.sh"

  user-management:
    container_name: user-management
    build: ./services/user-management/
    expose:
      - "8000:8000"
    volumes:
      - django:/singlepageapp
    networks:
      - network
    depends_on:
        postgres:
          condition: service_healthy
    env_file:
      - .env
    environment:
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}

  postgres:
    container_name: postgres
    build: ./services/postgres/
    # volumes:
    #   - ./services/volumes/postgres:/var/lib/postgresql/data/
    env_file: .env
    environment:
      - POSTGRES_USER=${SQL_USER}
      - POSTGRES_DB=${SQL_DATABASE}
      - POSTGRES_PASSWORD=${SQL_PASSWORD}
    expose:
      - "5432:5432"
    networks:
     - network

  back-game:
    container_name: back-game-pong
    build: services/back-game-pong/
    ports:
      - "2605:2605"
    env_file: .env
    networks:
     - network

  redis:
    container_name: redis
    build: ./services/redis/
    env_file: .env
    expose:
      - "6379:6379"
    volumes:
      - redis:/var/lib/redis
    networks:
      - network

networks:
  network:
    driver: bridge

volumes:
  nginx:
  django:
  redis:
