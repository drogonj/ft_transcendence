services:
  postgres:
    container_name: postgres
    build: 
      context: services/postgres
      dockerfile: Dockerfile
    volumes:
     - /sgoinfre/$USER/postgres:/var/lib/postgresql/data/
    env_file:
     - services/.env
    expose:
     - "5432" 
    networks:
     - transcendence
    healthcheck:
     test: ["CMD-SHELL", "pg_isready -U \"${POSTGRES_USER}\" -d \"${POSTGRES_DB}\""]
     interval: 3s
     timeout: 3s
     retries: 3
  asgi:
    container_name: asgi
    build: 
      context: services/asgi
      dockerfile: Dockerfile
    volumes:
     - ./sgoinfre/$USER/asgi:/var/lib/asgi/data/
    env_file:
     - services/.env
    depends_on:
      postgres:
       condition: service_healthy
    expose:
      - "8081"
    networks:
      - transcendence
  nginx:
    container_name: nginx
    build:
      context: services/nginx
      dockerfile: Dockerfile
    volumes:
     - ./sgoinfre/$USER/nginx:/var/lib/nginx/data/
    ports:
     - "80:80"
     - "443:443"
     - "8080:8080"
    restart: always
    depends_on:
     - asgi
    networks:
     - transcendence

volumes:
  postgres:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /sgoinfre/$USER/postgres
  asgi:
    driver: local
    driver_opts:
      type: none 
      o: bind
      device: /sgoinfre/$USER/asgi

networks:
  transcendence:
    driver: bridge